/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MovimentoOrcamentoVenda.java
 *
 * Created on 25/02/2011, 23:59:37
 */

package prime.view;

import br.com.adilson.util.PrinterMatrix;
import prime.bean.Cliente;
import prime.bean.Funcionario;
import prime.bean.OrcDet;
import prime.bean.OrcDetPK;
import prime.bean.Produto;
import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Administrador
 */
public class MovimentoOrcamentoVenda extends JPanel {
    
    public MovimentoOrcamentoVenda() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("siscomjavaPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT o FROM OrcCab o");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanel1 = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        try{  
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");  
            jTextField6 = new javax.swing.JFormattedTextField(data);  
        }  
        catch (Exception e){  
        }
        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        detailScrollPane = new javax.swing.JScrollPane();
        detailTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        saveButton1 = new javax.swing.JButton();
        refreshButton1 = new javax.swing.JButton();
        newButton1 = new javax.swing.JButton();
        deleteDetailButton1 = new javax.swing.JButton();
        newDetailButton1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setBackground(new java.awt.Color(0, 204, 204));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Orçamento"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codOrcCab}"));
        columnBinding.setColumnName("Cod. Orçamento");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codCliente}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codFuncionario}"));
        columnBinding.setColumnName("Funcionario Responsavel");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataOrcCab}"));
        columnBinding.setColumnName("Data");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vlrOrcCab}"));
        columnBinding.setColumnName("Valor Total");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(0).setPreferredWidth(10);

        jPanel1.add(masterScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 530, 170));

        jLabel1.setText("Código Orçamento:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jTextField1.setEditable(false);
        jTextField1.setFocusable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codOrcCab}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 100, -1));

        jLabel2.setText("Código Cliente:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, -1, -1));

        jTextField2.setToolTipText("Insira o Codigo do Cliente!");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codCliente}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextField2.addFocusListener(formListener);
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 60, -1));

        jTextField3.setBackground(new java.awt.Color(255, 255, 204));
        jTextField3.setEnabled(false);
        jTextField3.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codFuncionario.nomeFuncionario}"), jTextField3, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 180, -1));

        jLabel3.setText("Código Funcionario:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codFuncionario}"), jTextField4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField4, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextField4.addFocusListener(formListener);
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 60, -1));

        jTextField5.setBackground(new java.awt.Color(255, 255, 204));
        jTextField5.setEnabled(false);
        jTextField5.setFocusable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codFuncionario.nomeFuncionario}"), jTextField5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 210, -1));

        jLabel4.setText("Data Orçamento:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.dataOrcCab}"), jTextField6, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField6, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 100, -1));

        jLabel5.setText("Total Orçamento:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jTextField7.setBackground(new java.awt.Color(204, 255, 204));
        jTextField7.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.vlrOrcCab}"), jTextField7, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jTextField7, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jPanel1.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 120, -1));

        jLabel6.setText("R$:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 94, -1, -1));

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens do Orçamento"));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${selectedElement.orcDetCollection}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, eLProperty, detailTable);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${orcCab.codCliente}"));
        columnBinding.setColumnName("Cod Cliente");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${orcDetPK.codProduto}"));
        columnBinding.setColumnName("Cod Produto");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${qtdeOrcDet}"));
        columnBinding.setColumnName("Qtde");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vlrUnitOrcDet}"));
        columnBinding.setColumnName("Vlr. Unitártio");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vlrTotalOrcDet}"));
        columnBinding.setColumnName("Vlr Total");
        columnBinding.setColumnClass(Double.class);
        jTableBinding.setSourceUnreadableValue(java.util.Collections.emptyList());
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        detailTable.addKeyListener(formListener);
        detailScrollPane.setViewportView(detailTable);

        jPanel3.add(detailScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 530, 160));

        jPanel5.setBackground(new java.awt.Color(51, 102, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 255, 0))); // NOI18N

        saveButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/confirmar.JPG"))); // NOI18N
        saveButton1.setText("  Confirmar     ");
        saveButton1.addActionListener(formListener);

        refreshButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.JPG"))); // NOI18N
        refreshButton1.setText("    Cancelar     ");
        refreshButton1.addActionListener(formListener);

        newButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo.JPG"))); // NOI18N
        newButton1.setText("Iniciar Orçamento");
        newButton1.addActionListener(formListener);

        deleteDetailButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir.JPG"))); // NOI18N
        deleteDetailButton1.setText("     Excluir       ");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteDetailButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteDetailButton1.addActionListener(formListener);

        newDetailButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/inserir.JPG"))); // NOI18N
        newDetailButton1.setText("  Inserir Item  ");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), newDetailButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        newDetailButton1.addActionListener(formListener);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/acessar.JPG"))); // NOI18N
        jButton1.setText("Acessar Orçamento");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.JPG"))); // NOI18N
        jButton2.setText("   Imprimir      ");
        jButton2.addActionListener(formListener);

        jButton3.setText("Calcula Totais");
        jButton3.addActionListener(formListener);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/inserir.JPG"))); // NOI18N
        jButton4.setText("Buscar Cliente");
        jButton4.setToolTipText("Busce o Cod do Cliente para Efetuar o Orçamento");
        jButton4.addActionListener(formListener);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteDetailButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newDetailButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(25, 25, 25)
                .addComponent(newDetailButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteDetailButton1)
                .addGap(26, 26, 26)
                .addComponent(refreshButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton1)
                .addGap(27, 27, 27)
                .addComponent(jButton2)
                .addGap(26, 26, 26)
                .addComponent(jButton3)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                        .addGap(11, 11, 11)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton1) {
                MovimentoOrcamentoVenda.this.saveButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton1) {
                MovimentoOrcamentoVenda.this.refreshButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == newButton1) {
                MovimentoOrcamentoVenda.this.newButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == deleteDetailButton1) {
                MovimentoOrcamentoVenda.this.deleteDetailButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == newDetailButton1) {
                MovimentoOrcamentoVenda.this.newDetailButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                MovimentoOrcamentoVenda.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                MovimentoOrcamentoVenda.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                MovimentoOrcamentoVenda.this.jButton4ActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == jTextField2) {
                MovimentoOrcamentoVenda.this.jTextField2FocusLost(evt);
            }
            else if (evt.getSource() == jTextField4) {
                MovimentoOrcamentoVenda.this.jTextField4FocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == detailTable) {
                MovimentoOrcamentoVenda.this.detailTableKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents


    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
         try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<prime.bean.OrcCab> merged = new ArrayList<prime.bean.OrcCab>(list.size());
            for (prime.bean.OrcCab O : list) {
                merged.add(entityManager.merge(O));
            }
            list.clear();
            list.addAll(merged);
        }

        
}//GEN-LAST:event_saveButton1ActionPerformed

    private void refreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton1ActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
}//GEN-LAST:event_refreshButton1ActionPerformed

    private void newButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButton1ActionPerformed
        prime.bean.OrcCab O = new prime.bean.OrcCab();
        entityManager.persist(O);
        list.add(O);
        int row = list.size()-1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButton1ActionPerformed

    private void deleteDetailButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailButton1ActionPerformed
        int index = masterTable.getSelectedRow();
        prime.bean.OrcCab O = list.get(masterTable.convertRowIndexToModel(index));
        Collection<prime.bean.OrcDet> os = O.getOrcDetCollection();
        int[] selected = detailTable.getSelectedRows();
        List<prime.bean.OrcDet> toRemove = new ArrayList<prime.bean.OrcDet>(selected.length);
        for (int idx=0; idx<selected.length; idx++) {
            selected[idx] = detailTable.convertRowIndexToModel(selected[idx]);
            int count = 0;
            Iterator<prime.bean.OrcDet> iter = os.iterator();
            while (count++ < selected[idx]) iter.next();
            prime.bean.OrcDet o = iter.next();
            toRemove.add(o);
            entityManager.remove(o);
        }
        os.removeAll(toRemove);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
}//GEN-LAST:event_deleteDetailButton1ActionPerformed

    private void newDetailButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDetailButton1ActionPerformed
       // O que esta comentato e como era originalmente
        /*int index = masterTable.getSelectedRow();
        siscom.bean.OrcCab O = list.get(masterTable.convertRowIndexToModel(index));
        Collection<siscom.bean.OrcDet> os = O.getOrcDetCollection();
        if (os == null) {
            os = new LinkedList<siscom.bean.OrcDet>();
            O.setOrcDetCollection((List)os);
        }
        siscom.bean.OrcDet o = new siscom.bean.OrcDet(); //copiado até aki

        entityManager.persist(o);
        o.setOrcCab(O);
        os.add(o);
        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
        int row = os.size()-1;
        detailTable.setRowSelectionInterval(row, row);
        detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));*/

        entityManager.getTransaction().commit();
        entityManager.getTransaction().begin();

        int index = masterTable.getSelectedRow();
         prime.bean.OrcCab O = list.get(masterTable.convertRowIndexToModel(index));
        Collection<prime.bean.OrcDet> os = O.getOrcDetCollection();
        if (os == null) {
            os = new LinkedList<prime.bean.OrcDet>();
            O.setOrcDetCollection((List)os);
        }
        prime.bean.OrcDet o = new prime.bean.OrcDet();


       OrcDetPK ocd = new OrcDetPK(); //VendaDetPK vpk = new VendaDetPK();
        //vpk.setCodProduto("1010");

       ocd.setCodOrcCab(O.getCodOrcCab()); //vpk.setCodVendaCab(V.getCodVendaCab());
       o.setOrcDetPK(ocd); //v.setVendaDetPK(vpk);

       // ImportaProduto ip = new ImportaProduto(null, true);
       ImportaProduto2 ip2 = new ImportaProduto2(null, true);
        ip2.recebeObjeto2(o);
        ip2.setVisible(true);

        o.setOrcCab(O); //v.setVendaCab(V);

        entityManager.persist(o); //entityManager.persist(v);

        os.add(o); //vs.add(v);

        ProdutoQuery = entityManager.createNamedQuery("Produto.findByCodProduto");
        ProdutoQuery.setParameter("codProduto",o.getOrcDetPK().getCodProduto()); //ProdutoQuery.setParameter("codProduto", v.getVendaDetPK().getCodProduto());
        List<Produto> data = ProdutoQuery.getResultList();

        //v.setDescricaoProduto(data.get(0).getDescricaoProduto()); //Parei de implementar AKIIIIIIIIIIIIIIIIIIIIIIIIIII



        masterTable.clearSelection();
        masterTable.setRowSelectionInterval(index, index);
        int row = os.size() - 1; //int row = vs.size() - 1;
        detailTable.setRowSelectionInterval(row, row);
        detailTable.scrollRectToVisible(detailTable.getCellRect(row, 0, true));

        //Método para quando importar Produto ele ja seleciona e seta o cursor em QUANTIDADE para somente digitar a quantidade!
      detailTable.requestFocusInWindow();
      detailTable.changeSelection(row, 2, false, false);
      detailTable.editCellAt(row, 2);
      



    }//GEN-LAST:event_newDetailButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
               PrinterMatrix printer2 = new PrinterMatrix();




		//Define o tamanho do papel/tela para impressão, aqui 25 linhas e 80 colunas
		printer2.setOutSize(25,80);

        		//printer.printCharAtCol( Linha, Espaço da Lateral, Quantidade de Repetição, "=" );
		printer2.printCharAtCol( 1, 1, 80, "=" );
		printer2.printTextLinCol( 2, 1, "Prime - Sistema  Comercial"); //colunas=80-23=57/2=28  [(col-length(texto))/2 ]
		printer2.printCharAtCol( 3, 1, 80, "=" );
		printer2.printTextLinCol( 4, 1, "Orçamento  -  Dados referente ao Orçamento de Nro:" );
		printer2.printCharAtCol( 5, 1, 80, "-" );

		//printer2.printTextLinCol( 6, 1, "Dados referente ao Orçamento de Nro:" );
        //printer2.printCharAtCol( 6, 1, 80, "-" );

		printer2.printTextLinCol( 6, 1/*28*/, "Cliente" );
		printer2.printTextLinCol( 6, 29/*15*/, "Data" );
		printer2.printTextLinCol( 6, 41/*10*/, "Valor Total" );
        printer2.printTextLinCol( 6, 55/*25*/, "Funcionario" );
		printer2.printCharAtCol( 7, 1, 80, "-" );

            int index2 = masterTable.getSelectedRow();
                 prime.bean.OrcCab O = list.get(masterTable.convertRowIndexToModel(index2));
                Collection<prime.bean.OrcDet> os = O.getOrcDetCollection();

            int index = masterTable.getSelectedRow();
          prime.bean.OrcCab orcCab = list.get(masterTable.convertRowIndexToModel(index));
           Collection<prime.bean.OrcDet> cs = orcCab.getOrcDetCollection();

           int linha = 8;


                                                      String nomeCliente;
                                                    clienteQuery = entityManager.createNamedQuery("Cliente.findByCodCliente");
                                                    clienteQuery.setParameter("codCliente", orcCab.getCodCliente());
                                                    List<Cliente> data2 = clienteQuery.getResultList();
                                                    nomeCliente = ((String) data2.get(0).getNomeCliente());

                                                        String nomeFuncionario;
                                                        clienteQuery = entityManager.createNamedQuery("Funcionario.findByCodFuncionario");
                                                        clienteQuery.setParameter("codFuncionario", orcCab.getCodFuncionario());
                                                        List<Funcionario> funcionario = clienteQuery.getResultList();
                                                        nomeFuncionario = ((String) funcionario.get(0).getNomeFuncionario());

			printer2.printTextLinCol( 4, 51, String.valueOf(orcCab.getCodOrcCab()) );
            printer2.printTextLinCol( linha, 1, nomeCliente ); // Criar Variavel para o Nome do Cliente
            printer2.printTextLinCol( linha, 29/*8*/, String.valueOf(orcCab.getDataOrcCab() ) );
            printer2.printTextLinCol( linha, 41/*23*/, String.valueOf(orcCab.getVlrOrcCab() ) );
            //printer2.printTextLinCol( linha, 60/*30*/, String.valueOf(orcCab.getCodFuncionario() ) ); // Criar Variavel para o Nome do Funcionario
            printer2.printTextLinCol( linha, 55/*30*/, nomeFuncionario);
			linha++;
                    printer2.printTextLinCol( ++linha, 1, "Itens do Orçamento" );
                    printer2.printCharAtCol( ++linha, 1, 80, "-" );

                    printer2.printTextLinCol( ++linha, 1/*13*/, "Cod_Prod" );
                    printer2.printTextLinCol( linha, 15/*29*/, "Descrição" );
                    printer2.printTextLinCol( linha, 46/*10*/, "Qtde" );
                    printer2.printTextLinCol( linha, 56/*10*/, "Vlr Unit." );
                    printer2.printTextLinCol( linha, 68/*12*/, "Valor Real" );
                    printer2.printCharAtCol( ++linha, 1, 80, "-" );

            linha++;

    int index4 = masterTable.getSelectedRow();
        prime.bean.OrcCab C = list.get(masterTable.convertRowIndexToModel(index4));
    Collection<prime.bean.OrcDet> od = C.getOrcDetCollection();


    for (OrcDet orcDet : od) {

                                                     String descricaoProduto;
                                                   ProdutoQuery = entityManager.createNamedQuery("Produto.findByCodProduto");
                                                   ProdutoQuery.setParameter("codProduto", orcDet.getOrcDetPK().getCodProduto());//Pega o Cod Do Funcionario Apartir do numero Digitado
                                                  List<Produto> data = ProdutoQuery.getResultList(); //Busca no Banco o Funcionario correspondente a Aquele cod
                                                 descricaoProduto = ((String) data.get(0).getDescricaoProduto()); //Passa o nome referente ao cod como parâmetro para o JtextField5 (Campo do nome do funcionario!)



         printer2.printTextLinCol( linha, 1,  orcDet.getOrcDetPK().getCodProduto());
         printer2.printTextLinCol( linha, 15, descricaoProduto );
         printer2.printTextLinCol( linha, 46/*50*/, String.valueOf(orcDet.getQtdeOrcDet()));
         printer2.printTextLinCol( linha, 56/*60*/, String.valueOf(orcDet.getVlrUnitOrcDet()));
         printer2.printTextLinCol( linha, 68/*70*/, String.valueOf(orcDet.getVlrTotalOrcDet()));
         

        linha++;

    }



		printer2.printCharAtCol( ++linha, 1, 80, "-" );
            printer2.printCharAtCol(++linha, 20, 60, "_");
            printer2.printTextLinCol(++linha, 32, nomeFuncionario);
        //printer2.printCharAtCol( ++linha, 1, 80, "=" );

		printer2.toFile("Orcamento.txt");

		String arg[] = {""};
		ImpressaoView.main(arg);
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       //Original!
        /* Double valorTotal = 0.0;
        Double totalGeral = 0.0;

        int index = masterTable.getSelectedRow();
        siscom.bean.VendaCab V = list.get(masterTable.convertRowIndexToModel(index));
        Collection<siscom.bean.VendaDet> vs = V.getVendaDetCollection();

        for (VendaDet vendaDet : vs) {
            if (vendaDet.getQtdeVendaDet() == 0) {
                vendaDet.setQtdeVendaDet(1);
            }
            vendaDet.setVlrTotalVendaDet(vendaDet.getVlrUnitVendaDet() * vendaDet.getQtdeVendaDet());
            valorTotal = valorTotal + vendaDet.getVlrTotalVendaDet();
        }

        if (jTextField11.getText().equals("")) {
            jTextField11.setText("0");
        }

        totalGeral = valorTotal - Double.parseDouble(jTextField11.getText());

        jTextField9.setText(String.valueOf(valorTotal));
        jTextField12.setText(String.valueOf(totalGeral));
        */
        Double valorTotal = 0.0;
        //Double totalGeral = 0.0;

        int index = masterTable.getSelectedRow();
        prime.bean.OrcCab O = list.get(masterTable.convertRowIndexToModel(index));
        Collection<prime.bean.OrcDet> os = O.getOrcDetCollection();

        for (OrcDet orcDet : os) {
            if (/*vendaDet.getQtdeVendaDet()*/ orcDet.getQtdeOrcDet() == 0) {
                orcDet.setQtdeOrcDet(1); //vendaDet.setQtdeVendaDet(1);
            }
                    //vendaDet.setVlrTotalVendaDet(vendaDet.getVlrUnitVendaDet() * vendaDet.getQtdeVendaDet());
            orcDet.setVlrTotalOrcDet(orcDet.getVlrUnitOrcDet() * orcDet.getQtdeOrcDet());
                    //valorTotal = valorTotal + vendaDet.getVlrTotalVendaDet();
            valorTotal = valorTotal + orcDet.getVlrTotalOrcDet();
        }

                /* Metodo Para Dar Desconto
                 if (jTextField11.getText().equals("")) {
                        jTextField11.setText("0");
                 }
                 */

                    //Metodo Para Mostar o Total Geral (valor total - desconto)
                   //totalGeral = valorTotal - Double.parseDouble(jTextField11.getText());
        jTextField7.setText(String.valueOf(valorTotal));
        //jTextField9.setText(String.valueOf(valorTotal));
        //jTextField12.setText(String.valueOf(totalGeral));



    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusLost
        // Pegar o Nome do Cliente
        //Bean Cliente
        try {
            clienteQuery = entityManager.createNamedQuery("Cliente.findByCodCliente");
            clienteQuery.setParameter("codCliente", Integer.parseInt(jTextField2.getText()));
            List<Cliente> data = clienteQuery.getResultList();
            jTextField3.setText((String) data.get(0).getNomeCliente());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro!");
            e.printStackTrace();
        }

    //Tratar Execeptions

    }//GEN-LAST:event_jTextField2FocusLost

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
          // Pegar o Nome do Funcionario
        //Bean Funcionario
        try {

            clienteQuery = entityManager.createNamedQuery("Funcionario.findByCodFuncionario");
            clienteQuery.setParameter("codFuncionario", Integer.parseInt(jTextField4.getText()));//Pega o Cod Do Funcionario Apartir do numero Digitado
             List<Funcionario> data = clienteQuery.getResultList(); //Busca no Banco o Funcionario correspondente a Aquele cod
            jTextField5.setText((String) data.get(0).getNomeFuncionario()); //Passa o nome referente ao cod como parâmetro para o JtextField5 (Campo do nome do funcionario!)

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro!");
            e.printStackTrace();
        }

    //Tratar Execeptions



    }//GEN-LAST:event_jTextField4FocusLost

    private void detailTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_detailTableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailTableKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        BuscarCliente.main(null);
}//GEN-LAST:event_jButton4ActionPerformed
    private javax.persistence.Query ProdutoQuery;
    private javax.persistence.Query clienteQuery;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteDetailButton1;
    private javax.swing.JScrollPane detailScrollPane;
    private javax.swing.JTable detailTable;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private java.util.List<prime.bean.OrcCab> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton1;
    private javax.swing.JButton newDetailButton1;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton1;
    private javax.swing.JButton saveButton1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
    public static void main(final String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new MovimentoOrcamentoVenda());
              //  frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
                frame.setTitle(args[0]);
            }
        });
    }

}
